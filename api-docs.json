{
  "openapi": "3.0.1",
  "info": {
    "title": "Social media",
    "description": "Social media API project",
    "contact": {
      "name": "Aleksandr Bolodurin",
      "url": "https://t.me/bandit26",
      "email": "shur026@yandex.ru"
    },
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "security": [
    {
      "Bearer Authentication": []
    }
  ],
  "paths": {
    "/userposts": {
      "put": {
        "tags": [
          "User posts resource"
        ],
        "summary": "Updates the user's post",
        "operationId": "updatePost",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostResponse"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PagePostResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "User posts resource"
        ],
        "summary": "Creates the user's post",
        "operationId": "createPost",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful creation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PagePostResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User posts resource"
        ],
        "summary": "Deletes the user's post",
        "operationId": "deletePost",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostResponse"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PagePostResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/unsub": {
      "put": {
        "tags": [
          "User subscriptions resource"
        ],
        "summary": "Unsubscribe",
        "operationId": "unsubscribe",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful, returns subscriptions",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SubsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/sub": {
      "put": {
        "tags": [
          "User subscriptions resource"
        ],
        "summary": "Subscribe",
        "operationId": "subscribe",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful, returns subscriptions",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SubsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "tags": [
          "User authorization resource"
        ],
        "summary": "Receives registration form and returns bearer token",
        "operationId": "register",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful registration",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/messenger": {
      "get": {
        "tags": [
          "Messenger resource"
        ],
        "summary": "Show chat with user",
        "operationId": "showChatWith",
        "parameters": [
          {
            "name": "userToChat",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UserResponse"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageMessageResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Messenger resource"
        ],
        "summary": "Send message to user",
        "operationId": "sendMessage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful send",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageMessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "User authorization resource"
        ],
        "summary": "Receives login form and returns bearer token",
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/userposts/{id}": {
      "get": {
        "tags": [
          "User posts resource"
        ],
        "summary": "Show post by id",
        "operationId": "show",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PostResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/subscriptions": {
      "get": {
        "tags": [
          "User subscriptions resource"
        ],
        "summary": "Get current subscriptions",
        "operationId": "getSubscriptions",
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SubsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/subscribers": {
      "get": {
        "tags": [
          "User subscriptions resource"
        ],
        "summary": "Get current subscribers",
        "operationId": "getSubscribers",
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SubsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/feed": {
      "get": {
        "tags": [
          "User feed resource"
        ],
        "summary": "Shows feed for current user",
        "operationId": "showFeed",
        "responses": {
          "200": {
            "description": "Successful creation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PagePostResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PostResponse": {
        "required": [
          "content",
          "header",
          "id",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Post ID",
            "format": "int64"
          },
          "header": {
            "type": "string",
            "description": "Post header"
          },
          "content": {
            "type": "string",
            "description": "Post content"
          },
          "timestamp": {
            "type": "string",
            "description": "Post timestamp",
            "format": "date-time"
          }
        }
      },
      "PagePostResponse": {
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostResponse"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "PageableObject": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "paged": {
            "type": "boolean"
          },
          "unpaged": {
            "type": "boolean"
          }
        }
      },
      "SortObject": {
        "type": "object",
        "properties": {
          "empty": {
            "type": "boolean"
          },
          "sorted": {
            "type": "boolean"
          },
          "unsorted": {
            "type": "boolean"
          }
        }
      },
      "UserRequest": {
        "required": [
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "User username"
          }
        }
      },
      "SubsResponse": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "description": "List of subscriptions/subscribers",
            "items": {
              "$ref": "#/components/schemas/UserResponse"
            }
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "User username"
          }
        },
        "description": "List of subscriptions/subscribers"
      },
      "PostRequest": {
        "required": [
          "content",
          "header"
        ],
        "type": "object",
        "properties": {
          "header": {
            "type": "string",
            "description": "Post header"
          },
          "content": {
            "type": "string",
            "description": "Post content"
          }
        }
      },
      "RegisterRequest": {
        "required": [
          "email",
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Username, uses as auth login"
          },
          "email": {
            "type": "string",
            "description": "User email"
          },
          "password": {
            "maxLength": 2147483647,
            "minLength": 6,
            "type": "string",
            "description": "User password"
          }
        }
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Bearer token"
          }
        }
      },
      "MessageRequest": {
        "type": "object",
        "properties": {
          "consumer": {
            "type": "string",
            "description": "Consumer username"
          },
          "message": {
            "type": "string",
            "description": "Message content"
          }
        }
      },
      "MessageResponse": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "description": "Producer username"
          },
          "to": {
            "type": "string",
            "description": "Consumer username"
          },
          "message": {
            "type": "string",
            "description": "Message content"
          },
          "timestamp": {
            "type": "string",
            "description": "Message timestamp",
            "format": "date-time"
          }
        }
      },
      "PageMessageResponse": {
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "LoginRequest": {
        "required": [
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "User username"
          },
          "password": {
            "type": "string",
            "description": "User password"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer Authentication": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}